/*
 * Created on 2022-01-04 ( 14:24:59 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package org.demo.entities;

import static junit.framework.TestCase.assertNotNull;
import static junit.framework.TestCase.assertNull;

import org.demo.jpa.tools.JpaTest;
import org.junit.Test;

public class DatalogJpaTest extends JpaTest {
	
    @Override
    public void initData() {
		// DatabaseData.init(em) has been called before
		// Initialize here other data required for the current test
    }
	
    private Datalog createEntity() {
    	Datalog entity = new Datalog();
		entity.setDatalogid( Integer.valueOf(200) ) ;
		entity.setMainnumber( "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB" ) ;
		entity.setMaintype( "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB" ) ;
		entity.setSubnumber( "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB" ) ;
		entity.setSubtype( "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB" ) ;
		entity.setStatus( Integer.valueOf(200) ) ;
		entity.setRemarks( "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB" ) ;
		entity.setDatatags( "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB" ) ;
		entity.setCreated( java.sql.Timestamp.valueOf("2002-05-21 02:46:52") ) ;
		entity.setUpdated( java.sql.Timestamp.valueOf("2002-05-21 02:46:52") ) ;
		entity.setOrganisationId( Integer.valueOf(200) ) ;
    	return entity;
    }

    private Object getEntityKey(Datalog entity) {
    	return entity.getDatalogid();
    }

    @Test
    public void testPersistFindRemove() {
    	
    	Datalog entity = createEntity();
    	Object key = getEntityKey(entity);

    	// if entity doesn't exist yet
    	if ( find(Datalog.class, key) == null ) {

	    	// Create with 'persist'
    		persistAndRefresh(entity);
    	
			// Find
			Datalog entity2 = find(Datalog.class, key);
			assertNotNull(entity2);
        
			// Remove
			remove(entity2);
			assertNull(find(Datalog.class, key));
		}
    }
    
    @Test
    public void testMergeFindRemove() {
    	
    	Datalog entity = createEntity();
    	Object key = getEntityKey(entity);

    	// Create or update with 'merge'
    	mergeAndRefresh(entity);
    	
    	// Find
    	Datalog entity2 = find(Datalog.class, key);
        assertNotNull(entity2);
        
    	// Remove
    	remove(entity2);
        assertNull(find(Datalog.class, key));
    }

}
